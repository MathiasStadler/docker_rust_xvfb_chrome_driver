FROM ubuntu:23.10

#set root passwd
RUN echo 'root:root' | chpasswd
RUN printf '#!/bin/sh\nexit 0' > /usr/sbin/policy-rc.d

#set user
# define a USER
# Environment variables for user
ENV PUID='1001'
ENV PGID='1001'
ENV USER='user'

# create user $USER
RUN groupadd --gid "$PGID" "$USER" 
RUN useradd --home-dir /home/$USER --shell /bin/bash --uid "$PUID" --gid "$PGID" "$USER" 
# RUN echo $USER | passwd --stdin $USER
RUN mkdir /home/$USER && chown -R $USER:$USER /home/$USER 
# add $USER to sudo
RUN mkdir -p /etc/sudoers.d 
RUN echo "user ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/"$USER" \
    && chmod 0440 /etc/sudoers.d/"$USER"
#set dbus for user 
RUN echo "export XDG_RUNTIME_DIR=/run/user/$(id -u ${USER})" > /home/${USER}/.bashrc && \
    echo "export DBUS_SESSION_BUS_ADDRESS="unix:path=${XDG_RUNTIME_DIR}/bus"" >> /home/${USER}/.bashrc


# install dbus
RUN apt-get update
#FROM HERE
#https://github.com/mviereck/x11docker/issues/229
RUN apt-get update && apt-get install -yqq systemd \
    systemd-sysv \
    dbus \
    dbus-x11 \
    dbus-user-session \ 
    mesa-utils \
    mesa-utils-extra 

# x downlaods
RUN apt-get update && apt-get install -yqq xvfb \
    apt-transport-https \
    adduser \
    x11vnc \
    bash \
    vim \
    htop \
    sudo \
    fluxbox \
    x11-utils # for xdpyinfo \
    bash \
    vim \
    terminus-font \
    curl \
    wget \
    ca-certificates \
    unzip 

# Chrome dependency Instalation \
# FROM HERE - https://github.com/Dmitry-Ostashev/testcafe-kubernetes-example/blob/main/Dockerfile \
RUN apt-get update && apt-get install -yqq fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libatspi2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libwayland-client0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxkbcommon0 \
    libxrandr2 \
    xdg-utils \
    libu2f-udev \
    libvulkan1 \
    gcc 

RUN apt-get update && apt-get install -yqq  libv4l-0 

# add chrome
# FROM HERE
# https://github.com/mviereck/x11docker/issues/229
RUN apt-get update && apt-get install -yqq apt-transport-https \
    ca-certificates \
    locales \
    locales-all \
    hicolor-icon-theme \
    dbus-x11 \
    mesa-utils \
    mesa-utils-extra \
    xpra \
    websockify 

RUN apt-get update && apt-get install -yqq libgl1-mesa-dri \
    libpango1.0-0 \
    libpulse0 \
    libv4l-0 \
    libcanberra-gtk-module  \
    sssd \
    sssd-dbus
#    libcanberra-gtk
#    libgl1-mesa-glx
#  

# Add chrome user
# RUN groupadd -r chrome && useradd -r -g chrome -G audio,video chrome \
#    && mkdir -p /home/chrome/Downloads && chown -R chrome:chrome /home/chrome
# for chrome FROM HERE
# https://stackoverflow.com/questions/71571296/can-i-silence-qstandardpaths-xdg-runtime-dir-not-set-defaulting-to-tmp-runti
ENV XDG_RUNTIME_DIR=/tmp




# download google-chrome
# RUN echo $?
# RUN cd /tmp && wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
# RUN curl -vsSLO https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

ADD download/google-chrome-stable_current_amd64.deb .

# install google-chrome
RUN apt-get install -yqq ./google-chrome-stable_current_amd64.deb

# save space
RUN rm google-chrome-stable_current_amd64.deb

#start systemd
RUN printf "systemctl start systemd-logind" >> /etc/profile

# systemctl enable dbus.service
# systemctl status dbus.service
## The unit files have no installation config
# clean up
RUN apt-get autoremove -y \
    && apt-get clean -y \
    && apt-get autoclean -y \
    && rm -rf /var/lib/apt/lists/*

# copy bootstrap.sh
RUN mkdir -p /opt
COPY /bootstrap.sh /opt

# copy docker-entrypoint
COPY docker-dbus-entrypoint.sh /opt

# add to /home/user/.bashrc
# https://dw.exitstatus0.com/doku.php?id=wiki:systemd_user_service#troubleshooting
# systemctl start systemd-logind.service

# run 
# CMD ["/bin/bash","/opt/bootstrap.sh"]
RUN chmod +x /opt//docker-dbus-entrypoint.sh
ENTRYPOINT ["/opt/docker-dbus-entrypoint.sh"]
# ENTRYPOINT ["/sbin/init"]


# hier weiter 

# cd systemd
# docker build -t ubuntu_23_10_xvfb -f Dockerfile_ubuntu_23_10_xvfb "."

# docker build -t ubuntu_23_10_xvfb_dbus -f Dockerfile_ubuntu_23_10_xvfb_dbus "."
# --progress=plain
# docker build --progress=plain -t ubuntu_23_10_xvfb_dbus -f Dockerfile_ubuntu_23_10_xvfb_dbus "."

# run
# docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -v /var/run/dbus:/var/run/dbus -v /sys/fs/cgroup:/sys/fs/cgroup:ro --cap-add SYS_ADMIN --security-opt apparmor=unconfined --tmpfs /run ubuntu_23_10_xvfb

# docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -v /var/run/dbus:/var/run/dbus -v /run/dbus/system_bus_socket:/run/dbus/system_bus_socket  -v /sys/fs/cgroup:/sys/fs/cgroup:ro --cap-add SYS_ADMIN --security-opt apparmor=unconfined --tmpfs /run ubuntu_23_10_xvfb

# /w dbus
# docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -v /var/run/dbus:/var/run/dbus -v /run/dbus/system_bus_socket:/run/dbus/system_bus_socket  -v /sys/fs/cgroup:/sys/fs/cgroup:ro --cap-add SYS_ADMIN --security-opt apparmor=unconfined --tmpfs /run ubuntu_23_10_xvfb_dbus

# /w /sys/fs/cgroup/unified/docker
# docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -v /sys/fs/cgroup/unified/docker:/sys/fs/cgroup/unified/docker -v /var/run/dbus:/var/run/dbus -v /run/dbus/system_bus_socket:/run/dbus/system_bus_socket  -v /sys/fs/cgroup:/sys/fs/cgroup:ro --cap-add SYS_ADMIN --security-opt apparmor=unconfined --tmpfs /run ubuntu_23_10_xvfb_dbus

# docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -v /sys/fs/cgroup:/sys/fs/cgroup:ro --cap-add SYS_ADMIN --security-opt apparmor=unconfined --tmpfs /run ubuntu_23_10_xvfb_dbus bash

#  google-chrome-stable --no-sandbox --no-first-run --disable-gpu --enable-logging=stderr -v=3 > log.txt 2>&1

# google-chrome-stable --no-sandbox --no-first-run --disable-gpu --disable-features=dbus --disable-setuid-sandbox  --enable-logging=stderr -v=1 > log.txt 2>&1


# next step
# docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -v /sys/fs/cgroup:/sys/fs/cgroup:ro --cap-add SYS_ADMIN --security-opt apparmor=unconfined --tmpfs /run ubuntu_23_10_xvfb_dbus bash

# next step
# docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -v /sys/fs/cgroup:/sys/fs/cgroup:ro --cap-add SYS_ADMIN --security-opt apparmor=unconfined --tmpfs /run --device /dev/snd --device /dev/dri -v /dev/shm:/dev/shm ubuntu_23_10_xvfb_dbus bash

# docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -v /sys/fs/cgroup:/sys/fs/cgroup:ro --cap-add SYS_ADMIN --security-opt apparmor=unconfined --tmpfs /run --device /dev/snd --device /dev/dri -v /dev/shm:/dev/shm ubuntu_23_10_xvfb_dbus bash 
